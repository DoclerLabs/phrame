@import 'phrame';

////
/// @group Form
/// @author Viktor Vincze
////

/// Input focus style
/// @access private
%_form-focus {
	color: _color('form.input-focus-text');
	background: _color('form.input-focus-background');
	border-color: _color('form.input-focus-border');
	border-width: 1px;
	box-shadow: none;
}

/// Default input style
/// @access private
%_form-input-style {
	@include _rem-each((
		height: _form('dimension.input-height'),
		line-height: _form('dimension.line-height'),
		font-size: _form('font-size.input'),
		padding: _form('dimension.input-padding'),
		border-radius: _dim('global-radius')
	));

	display: block;
	outline: none;
	color: _color('form.input-text');
	background: _color('form.input-background');
	border: 1px solid transparent;
	box-shadow: 0 0.1rem 0 lighten(_color('form.input-background'), 15%);
	width: 100%;
	font-family: _typo('font-family.sans');

	&.need-bottom-space {
		margin-bottom: 2.5rem;
	}
}

.#{_format-selector('form', false, false, true)} {

	&-row {
		@include _rem(margin-bottom, _form('gutter.form-row-bottom'));
		position: relative;
	}

	label:not(.unstyle) {
		@include _rem-each((
			padding-right: _form('gutter.label-right'),
			line-height: _form('dimension.input-height'),
			font-size: _form('font-size.label'),
		));

		display: block;
		width: 100%;
		text-align: right;
		position: relative;
	}
	// Hide spinner buttons from number input
	input[type=number]::-webkit-inner-spin-button,
	input[type=number]::-webkit-outer-spin-button {
		-webkit-appearance: none;
		margin: 0;
	}
	// Simple text input
	input::-ms-clear,
	input::-ms-reveal {
		display: none;
	}
	input,
	input[type="checkbox"] + label,
	input[type="radio"] + label,
	textarea {
		@extend %_form-input-style;

		&:focus,
		&.input-focus {
			@extend %_form-focus;
		}

		@include _placeholder {
			color: _color('form.input-placeholder-text');
		}
	}

	@at-root .ph-form-input {
		@extend %_form-input-style;

		&:focus {
			@extend %_form-focus;
		}

		@include _placeholder {
			color: _color('form.input-placeholder-text');
		}
	}

	input[type="checkbox"],
	input[type="radio"]{
		opacity: 0;
		width: 0;
		height: 0;
		display: none;
		margin: 0;
		padding: 0;

		& + label {
			@include _rem-each((
				width: 26,
				height: 26
			));
			@include _no-selection;

			display: inline-block;
			padding: 0;
			position: relative;
			cursor: pointer;
			z-index: 1;
			vertical-align: middle;

			&:before {
				display: inline-block;
				position: absolute;
				visibility: hidden;
			}
		}

		&:checked + label:before {
			@include _opacity(1);

			visibility: visible;
		}

		& + label + label {
			@include _rem-each((
				padding-left: 10
			));

			width: calc(100% - 3rem);
			text-align: left;
			display: inline;
			position: relative;
			line-height: 2.8rem;
			vertical-align: top;
		}

		&[disabled] {
			&,
			& + label,
			& + label + label {
				@include _opacity(0.5);
				cursor: not-allowed;
			}
		}

		&:focus + label {
			@extend %_form-focus;
		}
	}

	input[type="checkbox"] {
		& + label {
			&:before {
				@include _rem-each((
					width: 0,
					font-size: 13,
					left: 4,
					top: 6
				));
				@include _transition(0);

				text-shadow: 0 1px 0 rgba(0, 0, 0, 0.17);
				color: _color('form.radio-check');
				overflow: hidden;
				text-align: left;
			}
		}

		&:checked + label:before {
			@include _rem-each((
				width: 18
			));
			@include _transition;
		}
	}

	input[type="radio"] {
		& + label {
			@include _rem(border-radius, 50);

			background-color: _color('form.radio-background');
			border: none;

			&:before {
				@include _rem-each((
					width: 12,
					height: 12,
					border-radius: 50,
					left: 7,
					top: 7
				));
				@include _opacity(0);
				@include _transform(scale(0));
				@include _transition(all, 0.2s, cubic-bezier(0.175, 0.885, 0.320, 1.8));

				content: '';
				box-shadow: 0 1px 0 rgba(0, 0, 0, 0.17);
				background-color: _color('form.radio-check');
			}
		}

		&:checked + label:before {
			@include _transform(scale(0.8));
		}
	}

	input[type="select"] {
		cursor: pointer;
	}

	.#{_format-selector('input-toggle', false, false, true)} {
		input + label {
			@extend %_form-input-style;

			@include _rem-each((
				width: 60,
				height: 26,
				border-radius: 50
			));

			overflow: hidden;

			i {
				@include _transition(all, 0.2s, _easing('ease-out-back'));
				@include _rem-each((
					font-size: 16,
					line-height: 26,
					text-indent: -5
				));

				width: 100%;
				height: 100%;
				text-align: center;
				display: block;
				position: absolute;
				left: 0;
				top: 0;
				overflow: hidden;
				text-shadow: 0 2px rgba(0,0,0,0.2);
			}

			i + i {
				@include _rem-each((
					text-indent: 5
				));

				background: _color('form.toggle.on-background');
				left: 100%;

			}

			&:before {
				display: none;
			}

			&:after {
				@include _transition(all, 0.2s, _easing('ease-out-back'));
				@include _rem-each((
					width: 26,
					height: 26,
					border-radius: 50,
					left: 42,
					top: -1
				));

				content: '';
				position: absolute;
				background: _color('form.toggle.handler-background');
				box-shadow: 0 0 5px 2px rgba(0,0,0,0.3);
			}

			&:hover {
				i:first-child {
					@include _rem(left, -6);
				}
				&:after {
					@include _rem(left, 32);
				}
			}
		}

		input:checked + label {
			&:after {
				@include _rem(left, -10);
			}

			i:first-child {
				left: -100% !important;
			}

			i + i {
				left: 0;
			}

			&:hover {
				i + i {
					@include _rem(left, 6);
				}
				&:after {
					@include _rem(left, -1);
				}
			}
		}
	}

	textarea {
		@include _rem-each((
			min-height: _form('dimension.input-height') * 2,
			padding-top: (_dim('global-gutter') / 2),
			padding-bottom: (_dim('global-gutter') / 2)
		));

		resize: none;
		line-height: _typo('line-height.root');
		max-width: 100%;
		font-family: _typo('font-family.sans');
	}

	input[disabled]{
		@include _opacity(0.5);
		cursor: not-allowed !important;
	}

	.#{_format-selector('input', false, false, true)} {

		&-disabled {
			@include _opacity(0.5);
			cursor: not-allowed !important;
		}

		&-has-icon {
			position: relative;

			input {
				@include _rem(padding-left, _form('font-size.input') * 3);
			}

			input:focus + .input-icon,
			textarea:focus + .input-icon {
				color: _color('form.input-text');
			}

			textarea {
				@include _rem-each((
					padding-left: _dim(global-gutter) / 2 + (_form('font-size.input') * 2),
				));
			}
		}

		&-required {
			label {
				&:after {
					content: '*';
					color: _color('form.required-asterix');
					font-style: normal;
					font-family: _typo('font-family.serif');
					position: absolute;
					top: 50%;
					@include _translate(0, -50%);
					@include _rem-each((
						font-size: 18,
						right: 10
					));
				}
			}

			[type='checkbox'] + label,
			[type='radio'] + label {
				&:after {
					display: none;
				}
			}
		}

		&-icon {
			position: absolute;
			color: _color('form.input-placeholder-text');

			@include _rem-each((
				font-size: _form('font-size.input') + (_form('font-size.input') / 2),
				top: _form('dimension.input-height') / 2,
				margin-top: ((_form('font-size.input') + (_form('font-size.input') / 2)) * -1) / 2,
				left: _form('font-size.input')
			));

			&-textarea {
				@include _rem-each((
					top: _dim(global-gutter) / 2,
					left: _dim(global-gutter) / 2
				));

				margin: 0;
			}
		}

		&-state {
			&-error,
			&-error + label, // Checkbox / radio
			&-error:focus {
				border-color: _color('form.input-state.error-border') !important;
				color: _color('form.input-state.error-text');
				box-shadow: none !important;
			}
		}

		&-merge {
			border-radius: 0;
			border-left-color: _color('form.input-background');
			border-right-color: _color('form.input-background');

			&-first {
				@include _rem-each((
					border-top-left-radius: _dim(global-radius),
					border-bottom-left-radius: _dim(global-radius)
				));
				border-left-color: _color('form.input-border');
			}

			&-last {
				@include _rem-each((
					border-top-right-radius: _dim(global-radius),
					border-bottom-right-radius: _dim(global-radius)
				));
				border-right-color: _color('form.input-border');
			}
		}
	}
}