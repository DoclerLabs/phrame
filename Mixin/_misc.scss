////
/// Misc mixins but still very useful :)
/// Thanks Zurb!
/// @group Misc
/// @author Viktor Vincze
////

/// Creates CSS triangles using the border technique
/// @access public
/// @param {String}		$triangle-size			Used to set border-size. No default, set a px or em size.
/// @param {String}		$triangle-color			Used to set border-color which makes up triangle. No default
/// @param {String}		$triangle-direction		Used to determine which direction triangle points. Options: top, bottom, left, right
@mixin _css-triangle($triangle-size, $triangle-color, $triangle-direction) {
	content: "";
	display: block;
	width: 0;
	height: 0;
	border: inset $triangle-size;
	@if ($triangle-direction == top) {
		border-color: $triangle-color transparent transparent transparent;
		border-top-style: solid;
	}
	@if ($triangle-direction == bottom) {
		border-color: transparent transparent $triangle-color transparent;
		border-bottom-style: solid;
	}
	@if ($triangle-direction == left) {
		border-color: transparent transparent transparent $triangle-color;
		border-left-style: solid;
	}
	@if ($triangle-direction == right) {
		border-color: transparent $triangle-color transparent transparent;
		border-right-style: solid;
	}
}

/// Makes an element visually hidden, but accessible.
/// @access public
@mixin _invisible {
	position: absolute !important;
	height: 1px;
	width: 1px;
	overflow: hidden;
	clip: rect(1px, 1px, 1px, 1px);
	-moz-clip: rect(1px, 1px, 1px, 1px);
	-webkit-clip: rect(1px, 1px, 1px, 1px);
}

/// Turns off the element-invisible effect.
/// @access public
@mixin _invisible-off {
	position: inherit !important;
	height: inherit !important;
	width: inherit !important;
	overflow: visible;
	clip: auto;
}

/*
custom-scrollbar: (
enabled: false,
width: 7px,
		height: 7px,
				 button: (
display: none,
background: 'black.main'
),
track-background: 'dark-red.darker',
thumb: (
background: 'red.main',
radius: 10px
),
arrow-color: 'yellow.main'
)
*/

/// Custom scrollbar styles in IE10+ and Chrome. All other browsers use native.
/// Configured from system config, the mixin just applies the style.
/// @access public
@mixin _scrollbar ($map: _system('custom-scrollbar')){
	$button: map-get($map, 'button');
	$thumb: map-get($map, 'thumb');

	& {
		// IE
		scrollbar-base-color: _config('_color-library.' + map-get($thumb, 'background'));
		scrollbar-track-color: _config('_color-library.' + map-get($map, 'track-background'));
		scrollbar-arrow-color: _config('_color-library.' + map-get($map, 'arrow-color'));
		scrollbar-shadow-color: rgba(0,0,0,0);
	}

	// Chrome
	&::-webkit-scrollbar {
		width: map-get($map, 'width');
		height: map-get($map, 'height');
	}

	&::-webkit-scrollbar-button {
		background-color: _config('_color-library.' + map-get($button, 'background'));
		display: map-get($button, 'display');
	}

	&::-webkit-scrollbar-track-piece {
		background-color: _config('_color-library.' + map-get($map, 'track-background'));
	}

	&::-webkit-scrollbar-thumb {
		background-color: _config('_color-library.' + map-get($thumb, 'background'));
		border-radius: map-get($thumb, 'radius');
	}

	&::-webkit-scrollbar-corner {
		display: none;
	}

	&::-webkit-resizer {
		background-color: rgba(255,255,255, 0.5);
	}
}